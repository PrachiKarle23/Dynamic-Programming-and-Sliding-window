class Solution {
public:

    bool solve(string s,string t,int i,int j,int n,int m)
    {
        if(i>=n){
            return true;
        }
        if(j>=m && i!=n){
            return false;
        }

        if(s[i]==t[j]){
            i++;
        }
        return solve(s,t,i,j+1,n,m);
    }
    bool isSubsequence(string s, string t) {
        int i=0,j=0,n=s.length(),m=t.length();

        return solve(s,t,i,j,n,m);
    }
};


//dp
class Solution {
public:
    bool solve(string s,string t,int i,int j,int n,int m,vector<vector<bool>>&dp)
    {
       if(i>=n){
        return true;
       }
       if(j>=m && i!=n){
        return false;
       }

       if(dp[m][n]!=false){
        return dp[m][n];
       }
       
       if(s[i]==t[j]){
        i++;
       }
       dp[m][n]= solve(s,t,i,j+1,n,m,dp);
       return dp[m][n];
    }
    bool isSubsequence(string s, string t) {
        int n=s.length(), m=t.length();
        vector<vector<bool>>dp(m+1,vector<bool>(n+1,false));
        return solve(s,t,0,0,n,m,dp);
    }
};
